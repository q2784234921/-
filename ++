// 加载 AEJSBridge.jslight.execute("light://js/AEJSBridge.js");(function () {    //定义素材对象    //并挂在global对象下    var global = global || (function () {        return this;    }());    var template = {};    global.template = template;    template.actionList = [];    template.traceList = [];    // 用于记录traceID，随人脸检测变化而变化    template.ageList = [];      // 用于记录当前的年龄，如果已经>=0，那么不走修改的逻辑    template.faceSizeList = []; // 人脸占比大小list    template.compList = [];     // 用于记录每一个index对应的节点。每个节点6个元素，包括：baby*2， male*2， female*2    template.offsetList = [];     // 用于记录每一个index对应的timeOffset节点。每个节点6个元素，包括：baby*2， male*2， female*2    template.transList = [];     // 用于记录每一个index对应的screenTransform节点。每个节点6个元素，包括：baby*2， male*2， female*2    template.hasShown = 0;      // 是否发送过消息    template.currTime = 0;    template.cacheScale1 = 1;    template.cacheScale2 = 1;    template.hasFace = false;    template.hasLastFace = false;    var currShowingID = new Set();    template.needAction = function (action) {        var needAction = template.actionList.indexOf(action) === -1;        if (needAction) {            template.actionList.push(action);        }        return needAction;    }    template.resetAction = function () {        template.actionList = [];    }    template.onTemplateInit = function (entityManager, eventManager) {        var raw_ids = [84, 288, 21, 140, 40, 208];        var dup_comps = [];        var dup_offset = [];        var dup_transform = [];        for (var i = 0; i < 6; i++) {            var comp_image = light.getComponent(entityManager.getEntity(raw_ids[i]), "Image");            comp_image.enabled = false;            var comp = light.getComponent(entityManager.getEntity(raw_ids[i]), "FaceTracking");            var subdup = comp.duplicate_entity_id_;            var subcomps = [];            var suboffset = [];            var subtrans = [];            // console.error('GYGYGY entity size %d',subdup.size())            for (var j = 0; j <= subdup.size(); j++) {   // 每一个复制项，都置为false
